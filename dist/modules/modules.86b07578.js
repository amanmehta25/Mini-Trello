"use strict";angular.module("miniTrello",["ngAnimate","ngRoute","ngSanitize","ngMessages","toastr","ui.router","config","dndLists"]),function(){angular.module("config",[]).config(["toastrConfig",function(a){angular.extend(a,{containerId:"toast-container",extendedTimeOut:0,timeOut:5e3,newestOnTop:!0,preventOpenDuplicates:!0})}])}(),angular.module("miniTrello").config(["$stateProvider","$urlRouterProvider",function(a,b){a.state("auth",{url:"/auth",templateUrl:"modules/auth/main.html"}).state("auth.sign-up",{url:"/sign-up",templateUrl:"modules/auth/sign-up.html",controller:"SignUp as SignUp"}).state("auth.log-in",{url:"/log-in",templateUrl:"modules/auth/log-in.html",controller:"LogIn as LogIn"}).state("board",{url:"/:userId/board",controller:"Board as Board",templateUrl:"modules/board/main-board.html"}).state("board.boards",{url:"/",templateUrl:"modules/board/boards-page.html",controller:"BoardPage as BoardPage"}).state("board.lists",{url:"/:boardId/lists",templateUrl:"modules/board/lists-page.html",controller:"ListPage as ListPage"}),b.otherwise("/auth/sign-up")}]),angular.module("miniTrello").controller("SignUp",["$scope","$http","$state","$window","Utils",function(a,b,c,d,e){var f=this;f.newUser={},d.localStorage.getItem("users")?f.users=JSON.parse(d.localStorage.getItem("users")):b({method:"GET",url:"json/users.json"}).then(function(a){f.users=a.data}),f.createNewUser=function(){var a=0;angular.forEach(f.users,function(b){b.name===f.newUser.name&&b.password===f.newUser.password&&(a=1,e.infoToastr("Please log in to continue","You are already an existing user!"))}),0===a&&(f.newUser.id=f.users.length+1,f.users.push(f.newUser),d.localStorage.setItem("users",JSON.stringify(f.users)),e.successToastr("Please log in to continue","Hola, you are successfully signed up!")),c.go("auth.log-in")}}]),angular.module("miniTrello").controller("LogIn",["$scope","$http","$state","$window","Utils",function(a,b,c,d,e){var f=this;f.user={},d.localStorage.getItem("users")?f.users=JSON.parse(d.localStorage.getItem("users")):b({method:"GET",url:"json/users.json"}).then(function(a){f.users=a.data}),f.verifyUser=function(){var a,b=0;angular.forEach(f.users,function(c){c.name===f.user.name&&c.password===f.user.password&&(b=1,a={id:c.id,name:c.name,password:c.password},e.successToastr("You are successfully logged in!"))}),0===b?e.errorToastr("Your login credentials are not correct. Please retry."):(d.localStorage.setItem("current-user",JSON.stringify(a)),c.go("board.boards",{userId:a.id}))}}]),angular.module("miniTrello").controller("Board",["$state","$window",function(a,b){var c=this;c.state=a,c.logOut=function(){b.localStorage.removeItem("current-user"),b.localStorage.removeItem("current-user-boards"),b.localStorage.removeItem("user-boards"),a.go("auth.log-in")}}]),angular.module("miniTrello").controller("BoardPage",["$scope","$filter","$http","$window",function(a,b,c,d){var e,f,g,h=this;console.log("initializing controller"),h.newBoardForm=!1,h.newBoard={id:"",name:"",lists:[]},f=JSON.parse(d.localStorage.getItem("current-user")),d.localStorage.getItem("user-boards")?(e=JSON.parse(d.localStorage.getItem("user-boards")),g=b("filter")(e,{user_id:f.id})[0],h.boards=g.boards,d.localStorage.setItem("current-user-boards",JSON.stringify(h.boards))):c({method:"GET",url:"json/boards.json"}).then(function(a){e=a.data,d.localStorage.setItem("user-boards",JSON.stringify(e)),g=b("filter")(e,{user_id:f.id})[0],h.boards=g.boards,d.localStorage.setItem("current-user-boards",JSON.stringify(h.boards))}),h.createNewBoard=function(){var a;angular.forEach(e,function(b,c){b.user_id===parseInt(f.id)&&(a=c)}),h.newBoard.id=h.boards.length+1,"undefined"==typeof a?(a=e.length+1,e=e.concat({user_id:a,boards:[h.newBoard]})):e[a].boards.push(angular.copy(h.newBoard)),d.localStorage.setItem("user-boards",JSON.stringify(e)),d.localStorage.setItem("current-user-boards",JSON.stringify(h.boards)),h.newBoardForm=!1,h.newBoard.id="",h.newBoard.name=""}}]),angular.module("miniTrello").controller("ListPage",["$scope","$filter","$http","$state","$stateParams","$window",function(a,b,c,d,e,f){var g,h,i=this;return i.newListForm=!1,i.newList={name:"",cards:[]},i.newCard={title:"",description:""},i.newCardForm=[],i.toggleCardForm=function(a){i.newCardForm[a]=!i.newCardForm[a]},f.localStorage.getItem("user-boards")?(g=JSON.parse(f.localStorage.getItem("user-boards")),h=b("filter")(g,{user_id:e.userId})[0],i.boards=b("filter")(h.boards,{id:e.boardId})[0],i.lists=i.boards.lists,a.lists=i.lists,i.createNewList=function(){i.lists.push(angular.copy(i.newList)),i.newList.name="",f.localStorage.setItem("current-user-boards",JSON.stringify(i.boards)),f.localStorage.setItem("user-boards",JSON.stringify(g))},i.createNewCard=function(a){i.lists[a].cards.push(angular.copy(i.newCard)),i.newCard={title:"",description:""},i.toggleCardForm(a),f.localStorage.setItem("current-user-boards",JSON.stringify(i.boards)),f.localStorage.setItem("user-boards",JSON.stringify(g))},void a.$watch("lists",function(){f.localStorage.setItem("current-user-boards",JSON.stringify(i.boards)),f.localStorage.setItem("user-boards",JSON.stringify(g))},!0)):void d.go("board.boards",{userId:e.userId})}]),angular.module("miniTrello").factory("Utils",["toastr",function(a){return{successToastr:function(b,c){c=c||"Success",a.success(b,c,{toastClass:"success-toastr",titleClass:"success-toastr-title",messageClass:"success-toastr-message",tapToDismiss:!1,closeButton:!0})},infoToastr:function(b,c){c=c||"Info",a.info(b,c,{toastClass:"info-toastr",titleClass:"info-toastr-title",messageClass:"info-toastr-message",tapToDismiss:!1,closeButton:!0})},errorToastr:function(b,c){c=c||"Error",a.error(b,c,{toastClass:"error-toastr",titleClass:"error-toastr-title",messageClass:"error-toastr-message",tapToDismiss:!1})}}}]),angular.module("miniTrello").run(["$templateCache",function(a){a.put("modules/auth/log-in.html",'<div class="log-in"> <div class="log-in__heading">Sign In into Your Account</div> <form ng-submit="LogIn.verifyUser()"> <div class="form-group"> <div class="input-group input-group--full-width"> <input class="form-control" type="text" name="username" ng-model="LogIn.user.name" placeholder="Username" required> </div> </div> <div class="form-group"> <div class="input-group input-group--full-width"> <input class="form-control" type="password" name="password" ng-model="LogIn.user.password" minlength="6" maxlength="10" placeholder="Password" required> </div> </div> <div class="position"> <button class="button button--primary" type="submit">Log In</button> </div> </form> <div class="log-in__sign-up"> Don\'t have an account? <a ui-sref="auth.sign-up">Sign Up</a> </div> </div>'),a.put("modules/auth/main.html",'<div class="main-container"> <h1 class="main-container__heading">Welcome to Mini Trello</h1> <div ui-view></div> </div>'),a.put("modules/auth/sign-up.html",'<div class="sign-up"> <div class="sign-up__heading">Sign Up for New Users</div> <form ng-submit="SignUp.createNewUser()"> <div class="form-group"> <div class="input-group input-group--full-width"> <input class="form-control" type="text" name="username" ng-model="SignUp.newUser.name" placeholder="Username" required> </div> </div> <div class="form-group"> <div class="input-group input-group--full-width"> <input class="form-control" type="password" name="password" ng-model="SignUp.newUser.password" minlength="6" maxlength="10" placeholder="Password" required> </div> </div> <div class="position"> <button class="button button--primary" type="submit">Sign Up</button> </div> </form> <div class="sign-up__log-in"> Already have an account? <a ui-sref="auth.log-in">Log In</a> </div> </div>'),a.put("modules/board/boards-page.html",'<div class="board-container text-center"> <div ng-show="BoardPage.boards.length > 0"> <div class="board-item" ui-sref="board.lists({boardId: board.id})" ng-repeat="board in BoardPage.boards track by board.id"> <div class="board-item__name">{{ board.name }}</div> <div>You have {{ board.lists.length }} lists in this board.</div> </div> </div> <div class="no-board" ng-show="BoardPage.boards.length == 0"> You have no saved boards. </div> <form class="board-form" ng-show="BoardPage.newBoardForm == true" ng-submit="BoardPage.createNewBoard()"> <div class="form-group"> <div class="input-group input-group--full-width"> <input class="form-control" type="text" name="boardname" ng-model="BoardPage.newBoard.name" placeholder="Enter board name" required> </div> <i class="board-warning">Please choose different names for the board</i> </div> <div class="position"> <button class="button button--secondary board-form-button" ng-click="BoardPage.newBoardForm=false">Cancel</button> <button class="button button--primary board-form-button" type="submit">Save</button> </div> </form> <button class="button button--primary" ng-show="BoardPage.newBoardForm == false" ng-click="BoardPage.newBoardForm=true"> Create a new board </button> </div>'),a.put("modules/board/lists-page.html",'<div class="list-container" ng-dblclick="ListPage.addList()"> <div ng-repeat="list in ListPage.lists track by $index" class="list"> <div class="list-name">{{ list.name }}</div> <!-- The dnd-list directive allows to drop elements into it.\n        The dropped data will be added to the referenced list --> <ul class="list-content" dnd-list="list.cards"> <!-- The dnd-draggable directive makes an element draggable and will\n                 transfer the object that was assigned to it. If an element was\n                 dragged away, you have to remove it from the original list\n                 yourself using the dnd-moved attribute --> <li ng-repeat="item in list.cards" dnd-draggable="item" dnd-moved="list.cards.splice($index, 1)" dnd-effect-allowed="move"> {{ item.title }} </li> </ul> <form class="card-form" ng-show="ListPage.newCardForm[$index]" ng-submit="ListPage.createNewCard($index)"> <div class="form-group"> <div class="input-group input-group--full-width"> <input class="form-control" type="text" name="card-title" ng-model="ListPage.newCard.title" placeholder="Enter card title" required> </div> </div> <div class="form-group"> <div class="input-group input-group--full-width"> <input class="form-control" type="text" name="card-desc" ng-model="ListPage.newCard.description" placeholder="Enter card description" required> </div> </div> <div class="position"> <button class="button button--secondary card-button" ng-click="ListPage.toggleCardForm($index)">Cancel</button> <button class="button button--primary card-button" type="submit">Save</button> </div> </form> <button class="button button--primary" ng-show="!ListPage.newCardForm[$index]" ng-click="ListPage.toggleCardForm($index)"> Add Card </button> </div> <div class="new-list"> <div class="new-list__heading" ng-show="ListPage.newListForm == false" ng-click="ListPage.newListForm=true">Add new list</div> <form class="list-form" ng-show="ListPage.newListForm" ng-submit="ListPage.createNewList()"> <div class="form-group"> <div class="input-group input-group--full-width"> <input class="form-control" type="text" name="list-name" ng-model="ListPage.newList.name" placeholder="Enter list name" required> </div> </div> <div class="position"> <button class="button button--secondary card-button" ng-click="ListPage.newListForm=false">Cancel</button> <button class="button button--primary card-button" type="submit">Save</button> </div> </form> </div> </div>'),a.put("modules/board/main-board.html",'<div class="log-out"> <div class="cursor pull-right" ng-click="Board.logOut()">Log Out</div> <div class="cursor" ng-show="!Board.state.includes(\'board.boards\')" ui-sref="board.boards({boardId: Board.state.params.userId})"> Back to Boards </div> </div> <div ui-view></div>')}]);
//# sourceMappingURL=modules.86b07578.js.map